Version 2.23~rc1: Mon Nov 11 10:30:49 EST 2024
	- Support for HPSS 10.3

Version 2.22: Wed Jan 10 15:54:26 EST 2024
	- Fix for ENOENT responses

Version 2.21: Wed Sep 20 16:03:29 EDT 2023
	- Changed how HPSS libraries and includes are discovered.

Version 2.20: Wed Aug  9 08:44:48 EDT 2023
	- Allow setting HPSS login name via the HPSS_DSI_LOGIN_NAME
	  environment variable.
	- Fix for cleanup after failed hpss_Open().
	- Added support for setting HPSS login name via the storage gateway.
	- Improved FTP error codes with proper errno strings.

Version 2.19-2: Tue Dec 13 11:15:31 EST 2022
	- Fixed rpm conflicts with GCSv4 packages

Version 2.18-1: Fri Oct 21 14:10:33 EDT 2022
	- Added support for HPSS 9.3
	- Fixed several build issues on EL8.6 with HPSS 9.3
	- Detect Globus Community Toolkit packages

Version 2.17: Thu May  5 10:48:50 EDT 2022
	- Added support for Globus Connect Server v5.4. Packages have a new
	  tag '+gcsv4 or '+gcsv5' to denote which version of GCS to install it
	  with.
	- Improved log message when HPSS login fails.
	- Fix TRACE logging some HPSS calls
	- Staging fix uses a predictable, but seemingly random, request ID

Version 2.16: Fri Jan  7 15:24:27 EST 2022
	- Workaround for hung processes when transfers are aborted
	- Fix for API_ENTER() in hpss_ReadAttrsPlus()

Version 2.15: Fri Dec  3 20:17:43 EST 2021
	- Added additional TRACE debug logging for STOR operations.
	- RPM has hard requirements on the correct HPSS version.
	- Added a runtime HPSS version check.

Version 2.14: Mon Aug 31 10:04:45 EDT 2020
	Feature release. Improved logging and error reporting.
	- Error messages with severity ERROR, WARN and INFO are now sent to
	  the GridFTP's server's log file.
	- DEBUG and TRACE messages can be enabled to a separate log file.
	- Log messages now include username and task id fields.
	- FTP error codes have been improve to include more information.
	- Configuration issues and authentication issues now emit useful
	  ERROR messages.
	- /etc/gridftp.d/hpss_debug is now provided by the RPM.

Version 2.13: Mon Aug 31 11:25:00 EDT 2020
	- Fixed an issue in directory listings that caused the GridFTP server
	  to unexpectedly disconnect.
	- Fixed configuration file parsing when checking if a config option
	  does not have a value.
	- Removed support for the Globus quota system. The 'QuotaSupport
	  config option is no longer supported.
	- Do not overwrite config files on package update.

Version 2.12: Tue May 19 22:30:49 EDT 2020
	- Fix for race condition in directory listings that caused listings to
	  look like errors to Transfer. This was a very rare occurence and 
	  Transfer would retry the transfer.

Version 2.11: Thu Apr  9 16:41:08 EST 2020
	- Added support for HPSS 8.x.

Version 2.10: Thu Mar  5 14:46:03 EST 2020
	- Fixes #72: WebApp should be able to follow symlinks to directories

Version 2.9: Sat Nov  2 19:21:34 EDT 2019
	- Fixes #56: Large recursive directory listings with CLI fail
	- Fixes #44: Support resumption of interrupted transfers
	- New logging subsytem to support monitoring and debugging
	- Added RPM packaging
	- require globus-gridftp-server-devel version 12 or greater
	- Builds no longer require globus-gridftp-server-control-devel
	  or libtirpc-devel
	- Added test subsystem for injecting failures for release verification

Version 2.8: Tue Apr  9 14:47:53 EDT 2019
	- issue 40: Modification timestamps are zero

Version 2.7: Mon Jan 14 16:08:11 UTC 2019
	- issue 35: Async stage requests cause red-ball-of-doom
	- issue 37: Timeout on stor of zero length files
	- removed patches/ directory, contents were out of date
	- moved important notices from the public documentation to README.md

Version 2.6: Mon Oct 29 16:23:47 CDT 2018
	- issue 32: Support for HPSS 7.5.1. Tested on RHEL 6.8
	- issue 33: Query stage status for long running processes

Version 2.5: Wed Sep 12 09:30:29 CDT 2018
	- issue 14: the DSI config file was renamed to gridftp_hpss_dsi.conf
	            the default LoginName in gridftp_hpss_dsi.conf is now 'hpssftp'
	- issue 15: Error on STOR: "Premature end of data transfer"
	- issue 16: Error on STOR: "Handle not in proper state EOF."

Version 2.4: Thu Jun 29 14:45:24 CDT 2017
	- Fix for reuse of free'd buffers on end-of-transfer or error conditions

Version 2.3: 
	- Fix for holes during RETR

Version 2.2: Mon Jun  6 10:21:05 CDT 2016
	- Fix for copy out buffer on stor

Version 2.1: Fri Apr  8 11:49:43 CDT 2016
	- Fix for OOM on STOR when there is a speed mismatch

Version 2.0: 
	- Added support for env vars HPSS_API_DEBUG, HPSS_API_DEBUG_PATH
	- Removed config options: ProjectFile, FamilyFile, CosFile, Admin
	- Added config options: QuotaSupport, UDAChecksumSupport
	- Removed config options: --enable-quota_support, --enable-ncsa_features, 
	  --enable-uda_checksum_support
	- Limited used buffers on RETR to the optimal connection count
	- Added support for SITE TRNC
	- On STOR, always use O_CREAT in support of S3 transfers
	- DSI version should now be corrected returned to the client on FEAT.

Version 1.8: Tue Jan 20 09:53:20 CST 2015
	- Fixed perf markers, the last marker wasn't being sent
	- Fix for restarts. See patches/perf_restart_markers.README. If you don't
	  understand it, then keep REST disabled (-disable-command-list).
	- Fixed commands handle allocation
	- Work has begun to get PIO onto a specific interface instead of listening
	  on all interfaces. See patches/pio_data_channel.README.
	- Removed Tape ID while stat'ing in order to improve performance.

Version 1.7: Tue Dec 23 13:30:45 CST 2014
	- Always link against libhpsskrb5auth and libhpssunixauth to support krb
	  sites
	- Fix for sites that are configured to require a specific COS for a
	  fileset
	- Removed the session cache, added a commands handle

Version 1.6: Tue Sep 23 11:30:00 CDT 2014
	- Reduced UDA call overhead for checksums
	- Fixed free() of unallocated memory when staging a file that does not
	  exist
	- Updated install guide. Removed references to --with-unixauth and --with_krb5auth.
	  Corrected --with-hpssdir to --with-hpss.
	- Changed access type for "SITE STAGE" to READ so that RETR on readonly sharing
	  works as expected.
	- Fixed permissions on newly created files and directories. Now by default files are
	  created 644 and directories are created 755 but these are also subject
	  to the process's umask setting which can be altered via xinetd.conf.

Version 1.5: Wed May  7 09:39:13 CDT 2014
	- Fixed PIO race condition for transfers that are stopped prematurely.
	- 'Fixed' build to not use globus-makefile-header.
	- Build now expects a 64bit installation
	- Worked around the XDR issue with HPSS 7.4.2, now the DSI only works
	  on Linux (See README.xdr)
	- Separated the source into loaders and module subdirectories (part of
	  the XDR fix)
	- Thanks to the XDR fix, we can now load libhpssunixauth.so and 
	  libhpsskrb5auth.so dynamically. The configure options --with-unixauth
	  and --with-krb5 have been removed.
	- Added --enable-uda_checksum_support to store checksums in UDA for use
	  with HPSS admin tools. Before now, this was not optional.

Version 1.4: Oct 29, 2013
	- Fix for staged files. Make sure tape SC does not have more bytes
	  than disk SC.
	- Fix for "System error in hpss_Opendir: Too many open files" while
	  doing recursive deletions.
	- Added tape ID to MLST/MLSC/MLSD output are the first portion of
	  the unique attribute. This can be used for intelligent ordering
	  of stage requests.
	- Prevent multiple stage requests for the same file

Version 1.3: Aug 20, 2013
	- Added --with-quota_support which will mark files with UDA so that the
	  NCSA quota system can find them later and fix the account IDs.
	- MLSC, MLSD, LIST no longer wait until all entries have been stat()'ed,
	  instead entries are returned 100 at a time to avoid client timeouts
	- Fixed missing symbol in misc_get_file_size()
	- Fix for files that change size thus change COS
	- CKSM operations are stored and retrieved from HPSS UDA. These are
	  compatible with hpsssum.

Version 1.2 : May 8, 2013
	- Change misc_file_archived() to check for any bytes on disk. Due to holes,
	  we can not expect DataLength to be on disk.
	- Added handling for files with gaps during RETR/CKSM
	- Fixed race condition in gridftp_register_read() which caused a deadlock
	- Throttled the call to globus_ftp_control_data_query_channels() to avoid
	  signal 11
	- Fixed partial checksums deadlock
	- Ordered buffers for RETR in streams mode
	- Another fix for transfer restarts
	- Prevent hang when hpss_PIOExecute() encounters an error
	- Limited gridftp read requests to one at a time to avoid bug GT-296
	- Removed call to globus_gridftp_server_get_optimal_concurrency() during read
	  requests to avoid bug GT-376
	- Fix to pio_data_register_read_callback() to handle large gaps
	- Changed when globus_gridftp_server_begin_transfer() is called when
	  transfers begin in order for the server to more gracefully handle
	  open errors.

Version 1.1 : January 28, 2013
	- Fixed Range Markers with partial stores (ESTO)
	- Fixed transfer restarts
	- Fixed range_list_insert() to correctly insert on the tail
	- Fixed setting of COS on truncated files
	- Added asynchronous message passing
	- Use the system MD5 library which is considerably faster than the
	  HPSS hash functions
	- Fixed a race condition in pio data which caused alarms with error
	  code -50 in HPSS and reported 
	    "system error in hpss_PIOExecute: Input/output error" 
	  through GridFTP.
	- Fix to allow files larger than the COS max file size to be placed
	  into the COS when enforce max file size is disabled.

Version 1.0 : Dec 19, 2012
	- Added fixes sent by Damian Hazen of LBL:
		- Fixed user->home directory mapping to use HPSS LDAP
		- Fixed KRB5 authentication issues
		- Added $HPSS_PATH_ETC/gridftp.conf as new config file location
		- Added gridftp_dsi_hpss_commands.c and header to Makefile.am
	- The search order for the config file is now:
		1) $HPSS_PATH_ETC/gridftp.conf
		2) /var/hpss/etc/gridftp.conf
	- Install directions now include config file setup
	- Fixed config file's AdminList syntax
	- No longer force max segment size in hints
	- Fix for RETR that end early, presumably due to a large segment count
	- Now requires Globus Toolkit 5.2.3rc1 or newer. See 
	  http://jira.globus.org/browse/GT-299
	- Added support for ESTO, ERET, REST (APPE, SCKS not supported yet)
	- Tested against HPSS 7.3.3P7
	- Remove libtool from the distribution
	- Added support for MFMT and SITE UTIME
	- Added support for SITE SYMLINKFROM/SYMLINKTO
	- Added symlink targets to list output
	- Added restart and performance markers in extended block mode
	- Added SETCOS,LSCOS (class of service), SETFAM,LSFAM (tape families)
	- Added project, family, cos and admin settings to the config file
	- Changed '250 Success' messages to '250 OK' to match server.
	- Added 'SITE HARDLINKFROM' and 'SITE HARDLINKTO'
	- Added 'SITE STAGE'. Files that can not be staged because they are on a
	  tape-only class of service will give a special warning.
	- Changed calculation for what is and is not archived. A file must be 
	  completely on a disk SC to be considered not archived.
	- Changed "AR" status in list output to "TP". This should better reflect
	  that some COS are tape only.
	- The list function has been removed until a fully functional version
	  including MLSD and NLST can be implemented.
	- Removed project file configs until those are better understood.
	- Split the DSI into local and control/data components

Version 0.2 Alpha
	- Tested against HPSS 7.4.1B
	- Remove globus_gridftp_server_hpss_data.c
	- [BUG 4] Added check for --with-unixauth or --with-krb5auth
	- [BUG 1] Ported to Globus Toolkit 5.2.1
	- [BUG 6] Fixed gap handling
	- [BUG 8] Fixed SIGABRT on file retrieve
	- [BUG 9] Fixed timestamps in directory listings
	- Changed HPSS API config flags to API_USE_CONFIG
	- Reorganized the stor/retr code
	- Added 'DK'/'AR' archive status to directory listings
	- Listing large directories no longer hangs until the complete listing is
	  ready
	- MLSD is broken
	- Removed config.log, config.status, Makefile and version.h

Version 0.1 Alpha
	- Initial version.
	- Requires Globus Toolkit 5.2.0
	- Tested against HPSS 7.3.3p4
	- Supports only single node transfers (no striping).
	- Hardcoded for unix authentication.
	- No throttling when creating data buffers.
	- COS determined by file size.
	- Very little testing done.
